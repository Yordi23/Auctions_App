service:
  name: auction-service

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
  # In here we add the necesary permision to allow our lambda function to interact our DynamoDB AuctionsTable
  iamRoleStatements:
    # Serverless framework allow us to import files, thats what we do in here
    - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}

# Here we define our DynamoDB table, which will be created, if does not exits, during a deploy
resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction

# This is just a custom yaml object that we created for facilitate some things
custom:
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
  # bundle:
  #   linting: false
